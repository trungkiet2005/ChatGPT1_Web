{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI_PROJECT\\\\Chat-GPT1-Web\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(({\n  isOpen,\n  onClose,\n  onSelectChat,\n  onNewChat,\n  currentChatId\n}, ref) => {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  useEffect(() => {\n    // Load chat history from localStorage\n    const savedHistory = localStorage.getItem('chatHistory');\n    if (savedHistory) {\n      setChatHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n  const saveChatHistory = history => {\n    // Keep only last 50 chats\n    const limitedHistory = history.slice(0, 50);\n    setChatHistory(limitedHistory);\n    localStorage.setItem('chatHistory', JSON.stringify(limitedHistory));\n  };\n  const saveCurrentChat = messages => {\n    var _firstUserMessage$tex;\n    // Don't save if there's no user message\n    const firstUserMessage = messages.find(msg => msg.role === 'user');\n    if (!firstUserMessage || !((_firstUserMessage$tex = firstUserMessage.text) !== null && _firstUserMessage$tex !== void 0 && _firstUserMessage$tex.trim())) {\n      return; // Don't save chat if user hasn't sent any message\n    }\n\n    // Use first user message as title\n    const cleanText = firstUserMessage.text.trim();\n    let chatTitle;\n    if (cleanText.length > 50) {\n      chatTitle = cleanText.substring(0, 50) + '...';\n    } else {\n      chatTitle = cleanText;\n    }\n\n    // Check if this chat already exists (by comparing first user message)\n    const existingChat = chatHistory.find(chat => {\n      var _existingFirstUserMsg;\n      const existingFirstUserMsg = chat.messages.find(msg => msg.role === 'user');\n      return (existingFirstUserMsg === null || existingFirstUserMsg === void 0 ? void 0 : (_existingFirstUserMsg = existingFirstUserMsg.text) === null || _existingFirstUserMsg === void 0 ? void 0 : _existingFirstUserMsg.trim()) === cleanText;\n    });\n    if (existingChat) {\n      // Update existing chat instead of creating new one\n      const updatedHistory = chatHistory.map(chat => chat.id === existingChat.id ? {\n        ...chat,\n        messages: messages,\n        timestamp: new Date().toISOString()\n      } : chat);\n      saveChatHistory(updatedHistory);\n      return existingChat.id;\n    }\n    const chatId = Date.now().toString();\n    const newChat = {\n      id: chatId,\n      title: chatTitle,\n      messages: messages,\n      timestamp: new Date().toISOString()\n    };\n    const updatedHistory = [newChat, ...chatHistory];\n    saveChatHistory(updatedHistory);\n    return chatId;\n  };\n  const deleteChat = chatId => {\n    const updatedHistory = chatHistory.filter(chat => chat.id !== chatId);\n    saveChatHistory(updatedHistory);\n  };\n  const handleSelectChat = chat => {\n    onSelectChat(chat);\n    onClose();\n  };\n  const formatDate = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = (now - date) / (1000 * 60);\n    if (diffInMinutes < 1) {\n      return 'Vừa xong';\n    } else if (diffInMinutes < 60) {\n      return `${Math.floor(diffInMinutes)} phút trước`;\n    } else if (diffInMinutes < 1440) {\n      // 24 hours\n      const hours = Math.floor(diffInMinutes / 60);\n      return `${hours} giờ trước`;\n    } else {\n      const diffInDays = Math.floor(diffInMinutes / 1440);\n      if (diffInDays === 1) {\n        return 'Hôm qua';\n      } else if (diffInDays < 7) {\n        return `${diffInDays} ngày trước`;\n      } else {\n        return date.toLocaleDateString('vi-VN', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric'\n        });\n      }\n    }\n  };\n\n  // Expose saveCurrentChat function to parent\n  React.useImperativeHandle(ref, () => ({\n    saveCurrentChat\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-overlay\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isOpen ? 'sidebar-open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"L\\u1ECBch s\\u1EED tr\\xF2 chuy\\u1EC7n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-close\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 20 20\",\n            fill: \"none\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M15 5L5 15M5 5l10 10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: () => {\n          onNewChat();\n          onClose();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"none\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 1v14M1 8h14\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Cu\\u1ED9c tr\\xF2 chuy\\u1EC7n m\\u1EDBi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: chatHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u01B0a c\\xF3 l\\u1ECBch s\\u1EED tr\\xF2 chuy\\u1EC7n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : chatHistory.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-item ${currentChatId === chat.id ? 'active' : ''}`,\n          onClick: () => handleSelectChat(chat),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-title\",\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-timestamp\",\n              children: formatDate(chat.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-chat\",\n            onClick: e => {\n              e.stopPropagation();\n              deleteChat(chat.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 16 16\",\n              fill: \"none\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M2 4h12M5.5 4V2.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V4M7 7v4M9 7v4M3 4l.5 9a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1L13 4\",\n                stroke: \"currentColor\",\n                strokeWidth: \"1.5\",\n                strokeLinecap: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"UpdIG/BWE3cNSVe0ZaaAve5Q6HI=\")), \"UpdIG/BWE3cNSVe0ZaaAve5Q6HI=\");\n_c2 = Sidebar;\nexport default Sidebar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sidebar$React.forwardRef\");\n$RefreshReg$(_c2, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","_s","forwardRef","_c","isOpen","onClose","onSelectChat","onNewChat","currentChatId","ref","chatHistory","setChatHistory","savedHistory","localStorage","getItem","JSON","parse","saveChatHistory","history","limitedHistory","slice","setItem","stringify","saveCurrentChat","messages","_firstUserMessage$tex","firstUserMessage","find","msg","role","text","trim","cleanText","chatTitle","length","substring","existingChat","chat","_existingFirstUserMsg","existingFirstUserMsg","updatedHistory","map","id","timestamp","Date","toISOString","chatId","now","toString","newChat","title","deleteChat","filter","handleSelectChat","formatDate","date","diffInMinutes","Math","floor","hours","diffInDays","toLocaleDateString","day","month","year","useImperativeHandle","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","e","stopPropagation","_c2","$RefreshReg$"],"sources":["D:/AI_PROJECT/Chat-GPT1-Web/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = React.forwardRef(({ isOpen, onClose, onSelectChat, onNewChat, currentChatId }, ref) => {\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load chat history from localStorage\r\n    const savedHistory = localStorage.getItem('chatHistory');\r\n    if (savedHistory) {\r\n      setChatHistory(JSON.parse(savedHistory));\r\n    }\r\n  }, []);\r\n\r\n  const saveChatHistory = (history) => {\r\n    // Keep only last 50 chats\r\n    const limitedHistory = history.slice(0, 50);\r\n    setChatHistory(limitedHistory);\r\n    localStorage.setItem('chatHistory', JSON.stringify(limitedHistory));\r\n  };\r\n\r\n  const saveCurrentChat = (messages) => {\r\n    // Don't save if there's no user message\r\n    const firstUserMessage = messages.find(msg => msg.role === 'user');\r\n    if (!firstUserMessage || !firstUserMessage.text?.trim()) {\r\n      return; // Don't save chat if user hasn't sent any message\r\n    }\r\n    \r\n    // Use first user message as title\r\n    const cleanText = firstUserMessage.text.trim();\r\n    let chatTitle;\r\n    if (cleanText.length > 50) {\r\n      chatTitle = cleanText.substring(0, 50) + '...';\r\n    } else {\r\n      chatTitle = cleanText;\r\n    }\r\n    \r\n    // Check if this chat already exists (by comparing first user message)\r\n    const existingChat = chatHistory.find(chat => {\r\n      const existingFirstUserMsg = chat.messages.find(msg => msg.role === 'user');\r\n      return existingFirstUserMsg?.text?.trim() === cleanText;\r\n    });\r\n    \r\n    if (existingChat) {\r\n      // Update existing chat instead of creating new one\r\n      const updatedHistory = chatHistory.map(chat => \r\n        chat.id === existingChat.id \r\n          ? { ...chat, messages: messages, timestamp: new Date().toISOString() }\r\n          : chat\r\n      );\r\n      saveChatHistory(updatedHistory);\r\n      return existingChat.id;\r\n    }\r\n    \r\n    const chatId = Date.now().toString();\r\n    \r\n    const newChat = {\r\n      id: chatId,\r\n      title: chatTitle,\r\n      messages: messages,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const updatedHistory = [newChat, ...chatHistory];\r\n    saveChatHistory(updatedHistory);\r\n    return chatId;\r\n  };\r\n\r\n  const deleteChat = (chatId) => {\r\n    const updatedHistory = chatHistory.filter(chat => chat.id !== chatId);\r\n    saveChatHistory(updatedHistory);\r\n  };\r\n\r\n  const handleSelectChat = (chat) => {\r\n    onSelectChat(chat);\r\n    onClose();\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffInMinutes = (now - date) / (1000 * 60);\r\n    \r\n    if (diffInMinutes < 1) {\r\n      return 'Vừa xong';\r\n    } else if (diffInMinutes < 60) {\r\n      return `${Math.floor(diffInMinutes)} phút trước`;\r\n    } else if (diffInMinutes < 1440) { // 24 hours\r\n      const hours = Math.floor(diffInMinutes / 60);\r\n      return `${hours} giờ trước`;\r\n    } else {\r\n      const diffInDays = Math.floor(diffInMinutes / 1440);\r\n      if (diffInDays === 1) {\r\n        return 'Hôm qua';\r\n      } else if (diffInDays < 7) {\r\n        return `${diffInDays} ngày trước`;\r\n      } else {\r\n        return date.toLocaleDateString('vi-VN', { \r\n          day: '2-digit', \r\n          month: '2-digit', \r\n          year: 'numeric' \r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Expose saveCurrentChat function to parent\r\n  React.useImperativeHandle(ref, () => ({\r\n    saveCurrentChat\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      {isOpen && <div className=\"sidebar-overlay\" onClick={onClose}></div>}\r\n      <div className={`sidebar ${isOpen ? 'sidebar-open' : ''}`}>\r\n        <div className=\"sidebar-header\">\r\n          <h3>Lịch sử trò chuyện</h3>\r\n          <button className=\"sidebar-close\" onClick={onClose}>\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n              <path d=\"M15 5L5 15M5 5l10 10\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        <button className=\"new-chat-btn\" onClick={() => { onNewChat(); onClose(); }}>\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n            <path d=\"M8 1v14M1 8h14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n          </svg>\r\n          <span>Cuộc trò chuyện mới</span>\r\n        </button>\r\n\r\n        <div className=\"chat-list\">\r\n          {chatHistory.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <p>Chưa có lịch sử trò chuyện</p>\r\n            </div>\r\n          ) : (\r\n            chatHistory.map(chat => (\r\n              <div \r\n                key={chat.id} \r\n                className={`chat-item ${currentChatId === chat.id ? 'active' : ''}`}\r\n                onClick={() => handleSelectChat(chat)}\r\n              >\r\n                <div className=\"chat-item-content\">\r\n                  <div className=\"chat-title\">{chat.title}</div>\r\n                  <div className=\"chat-timestamp\">{formatDate(chat.timestamp)}</div>\r\n                </div>\r\n                <button \r\n                  className=\"delete-chat\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteChat(chat.id);\r\n                  }}\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n                    <path d=\"M2 4h12M5.5 4V2.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V4M7 7v4M9 7v4M3 4l.5 9a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1L13 4\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}