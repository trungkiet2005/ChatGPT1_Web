{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI_PROJECT\\\\Chat-GPT1-Web\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Message from './Message';\nimport './ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://huynhtrungkiet09032005-gpt1.hf.space\";\nfunction ChatBox() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{\n    role: 'bot',\n    text: 'Hello! I am ChatGPT, a large language model trained by OpenAI. How can I help you today?'\n  }]);\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      role: 'user',\n      text: input\n    }]);\n    setLoading(true);\n    try {\n      const response = await fetch(`${BASE_URL}/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: input,\n          max_length: 350,\n          temperature: 1.0\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to generate response: ${response.status}`);\n      }\n      const data = await response.json();\n      const generatedText = data.generated_text || 'Sorry, I could not generate a response at this time.';\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        text: generatedText\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        text: `Sorry, an error occurred: ${error.message}`\n      }]);\n    } finally {\n      setLoading(false);\n      setInput('');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const startNewChat = () => {\n    setMessages([{\n      role: 'bot',\n      text: 'Hello! I am ChatGPT, a large language model trained by OpenAI. How can I help you today?'\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-button\",\n        onClick: startNewChat,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 4V20M4 12H20\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \"New chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Send a message...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: handleKeyDown,\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            disabled: loading || !input.trim(),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 2L11 13M22 2L15 22L11 13M11 13L2 9\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"bjoAWwfrYDdRIQ7mmLooWRUSU0I=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","Message","jsxDEV","_jsxDEV","BASE_URL","ChatBox","_s","input","setInput","messages","setMessages","role","text","loading","setLoading","handleSend","trim","prev","response","fetch","method","headers","body","JSON","stringify","prompt","max_length","temperature","ok","Error","status","data","json","generatedText","generated_text","error","console","message","handleKeyDown","e","key","shiftKey","preventDefault","startNewChat","className","children","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","placeholder","value","onChange","target","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["D:/AI_PROJECT/Chat-GPT1-Web/src/components/ChatBox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Message from './Message';\r\nimport './ChatBox.css';\r\n\r\nconst BASE_URL = \"https://huynhtrungkiet09032005-gpt1.hf.space\";\r\n\r\nfunction ChatBox() {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([\r\n    { role: 'bot', text: 'Hello! I am ChatGPT, a large language model trained by OpenAI. How can I help you today?' }\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n    \r\n    // Add user message\r\n    setMessages(prev => [...prev, { role: 'user', text: input }]);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/generate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          prompt: input,\r\n          max_length: 350,\r\n          temperature: 1.0\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to generate response: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const generatedText = data.generated_text || 'Sorry, I could not generate a response at this time.';\r\n      \r\n      setMessages(prev => [\r\n        ...prev,\r\n        { role: 'bot', text: generatedText }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [\r\n        ...prev,\r\n        { role: 'bot', text: `Sorry, an error occurred: ${error.message}` }\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const startNewChat = () => {\r\n    setMessages([\r\n      { role: 'bot', text: 'Hello! I am ChatGPT, a large language model trained by OpenAI. How can I help you today?' }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbox-container\">\r\n      <div className=\"sidebar\">\r\n        <button className=\"new-chat-button\" onClick={startNewChat}>\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M12 4V20M4 12H20\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n          New chat\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"messages-list\">\r\n          {messages.map((msg, idx) => (\r\n            <div key={idx} className={`message ${msg.role}`}>\r\n              <div className=\"message-content\">\r\n                {msg.text}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {loading && (\r\n            <div className=\"message bot\">\r\n              <div className=\"message-content\">\r\n                Thinking...\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"input-container\">\r\n          <div className=\"input-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Send a message...\"\r\n              value={input}\r\n              onChange={e => setInput(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              disabled={loading}\r\n            />\r\n            <button onClick={handleSend} disabled={loading || !input.trim()}>\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M22 2L11 13M22 2L15 22L11 13M11 13L2 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}