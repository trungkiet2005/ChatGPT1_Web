{"ast":null,"code":"import React,{useState}from'react';import Message from'./Message';import'./ChatBox.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BASE_URL=\"https://huynhtrungkiet09032005-gpt1.hf.space\";function ChatBox(){const[input,setInput]=useState('');const[messages,setMessages]=useState([{role:'bot',text:'Xin chào! Hãy nhập vài từ để mình làm thơ cho bạn.'}]);const[loading,setLoading]=useState(false);const handleSend=async()=>{if(!input.trim())return;// Add user message\nsetMessages(prev=>[...prev,{role:'user',text:input}]);setLoading(true);try{console.log('Sending request to:',\"\".concat(BASE_URL,\"/generate\"));console.log('Request payload:',{prompt:input,max_length:350,temperature:1.0});const response=await fetch(\"\".concat(BASE_URL,\"/generate\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:input,max_length:130,temperature:1.0})});console.log('Response status:',response.status);console.log('Response headers:',Object.fromEntries(response.headers.entries()));if(!response.ok){const errorText=await response.text();console.error('Error response:',errorText);throw new Error(\"Failed to generate poetry: \".concat(response.status,\" \").concat(errorText));}const data=await response.json();console.log('Response data:',data);// Process the generated text to remove lines containing \":\" and keep only complete lines\nconst rawText=data.generated_text||'Xin lỗi, không thể tạo thơ lúc này.';// Find the last complete newline\nconst lastNewlineIndex=rawText.lastIndexOf('\\n');const processedText=(lastNewlineIndex!==-1?rawText.substring(0,lastNewlineIndex):rawText).split('\\n').filter(line=>!line.includes(':')).filter(line=>line.trim()!=='')// Remove empty lines\n.join('\\n').replace(/\\n\\n/g,'\\n')// Replace double newlines with single newline\n.trim();// Ensure the number of lines is divisible by 4\nconst lines=processedText.split('\\n');const numLines=lines.length;const remainder=numLines%4;const adjustedLines=remainder===0?lines:lines.slice(0,numLines-remainder);// Add newline after every 4 lines\nconst finalText=adjustedLines.reduce((acc,line,index)=>{if(index>0&&index%4===0){return acc+'\\n'+line;}return acc+(index===0?'':'\\n')+line;},'');// Add bot response with the processed text\nsetMessages(prev=>[...prev,{role:'bot',text:finalText}]);}catch(error){console.error('Error generating poetry:',error);setMessages(prev=>[...prev,{role:'bot',text:\"Xin l\\u1ED7i, \\u0111\\xE3 c\\xF3 l\\u1ED7i x\\u1EA3y ra khi t\\u1EA1o th\\u01A1: \".concat(error.message)}]);}finally{setLoading(false);setInput('');}};const handleKeyDown=e=>{if(e.key==='Enter')handleSend();};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbox-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages-list\",children:[messages.map((msg,idx)=>/*#__PURE__*/_jsx(Message,{role:msg.role,text:msg.text},idx)),loading&&/*#__PURE__*/_jsx(Message,{role:\"bot\",text:\"\\u0110ang sinh th\\u01A1...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-row\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nh\\u1EADp t\\u1EEB kh\\xF3a \\u0111\\u1EC3 l\\xE0m th\\u01A1\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:handleKeyDown,disabled:loading}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,disabled:loading||!input.trim(),\"aria-label\":\"G\\u1EEDi\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M2.94 2.94a1.5 1.5 0 0 1 1.6-.33l12.5 5.06c1.2.49 1.2 2.15 0 2.64l-12.5 5.06a1.5 1.5 0 0 1-2.04-1.7l1.13-5.06a.5.5 0 0 1 0-.24L.9 4.64A1.5 1.5 0 0 1 2.94 2.94zm1.13 1.13a.5.5 0 0 0-.67.57l1.13 5.06a1.5 1.5 0 0 1 0 .24l-1.13 5.06a.5.5 0 0 0 .67.57l12.5-5.06a.5.5 0 0 0 0-.94l-12.5-5.06z\"})})})]})]});}export default ChatBox;","map":{"version":3,"names":["React","useState","Message","jsx","_jsx","jsxs","_jsxs","BASE_URL","ChatBox","input","setInput","messages","setMessages","role","text","loading","setLoading","handleSend","trim","prev","console","log","concat","prompt","max_length","temperature","response","fetch","method","headers","body","JSON","stringify","status","Object","fromEntries","entries","ok","errorText","error","Error","data","json","rawText","generated_text","lastNewlineIndex","lastIndexOf","processedText","substring","split","filter","line","includes","join","replace","lines","numLines","length","remainder","adjustedLines","slice","finalText","reduce","acc","index","message","handleKeyDown","e","key","className","children","map","msg","idx","type","placeholder","value","onChange","target","onKeyDown","disabled","onClick","viewBox","fill","d"],"sources":["D:/AI_PROJECT/Chat-GPT1-Web/src/components/ChatBox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Message from './Message';\nimport './ChatBox.css';\n\nconst BASE_URL = \"https://huynhtrungkiet09032005-gpt1.hf.space\";\n\nfunction ChatBox() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([\n    { role: 'bot', text: 'Xin chào! Hãy nhập vài từ để mình làm thơ cho bạn.' }\n  ]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    \n    // Add user message\n    setMessages(prev => [...prev, { role: 'user', text: input }]);\n    setLoading(true);\n\n    try {\n      console.log('Sending request to:', `${BASE_URL}/generate`);\n      console.log('Request payload:', {\n        prompt: input,\n        max_length: 350,\n        temperature: 1.0\n      });\n\n      const response = await fetch(`${BASE_URL}/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt: input,\n          max_length: 130,\n          temperature: 1.0\n        })\n      });\n\n      console.log('Response status:', response.status);\n      console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Error response:', errorText);\n        throw new Error(`Failed to generate poetry: ${response.status} ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('Response data:', data);\n      \n      // Process the generated text to remove lines containing \":\" and keep only complete lines\n      const rawText = data.generated_text || 'Xin lỗi, không thể tạo thơ lúc này.';\n      // Find the last complete newline\n      const lastNewlineIndex = rawText.lastIndexOf('\\n');\n      const processedText = (lastNewlineIndex !== -1 ? rawText.substring(0, lastNewlineIndex) : rawText)\n        .split('\\n')\n        .filter(line => !line.includes(':'))\n        .filter(line => line.trim() !== '') // Remove empty lines\n        .join('\\n')\n        .replace(/\\n\\n/g, '\\n') // Replace double newlines with single newline\n        .trim();\n      \n      // Ensure the number of lines is divisible by 4\n      const lines = processedText.split('\\n');\n      const numLines = lines.length;\n      const remainder = numLines % 4;\n      const adjustedLines = remainder === 0 ? lines : lines.slice(0, numLines - remainder);\n      \n      // Add newline after every 4 lines\n      const finalText = adjustedLines.reduce((acc, line, index) => {\n        if (index > 0 && index % 4 === 0) {\n          return acc + '\\n' + line;\n        }\n        return acc + (index === 0 ? '' : '\\n') + line;\n      }, '');\n      \n      // Add bot response with the processed text\n      setMessages(prev => [\n        ...prev,\n        { \n          role: 'bot', \n          text: finalText\n        }\n      ]);\n    } catch (error) {\n      console.error('Error generating poetry:', error);\n      setMessages(prev => [\n        ...prev,\n        { role: 'bot', text: `Xin lỗi, đã có lỗi xảy ra khi tạo thơ: ${error.message}` }\n      ]);\n    } finally {\n      setLoading(false);\n      setInput('');\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') handleSend();\n  };\n\n  return (\n    <div className=\"chatbox-container\">\n      <div className=\"messages-list\">\n        {messages.map((msg, idx) => (\n          <Message key={idx} role={msg.role} text={msg.text} />\n        ))}\n        {loading && <Message role=\"bot\" text=\"Đang sinh thơ...\" />}\n      </div>\n      <div className=\"input-row\">\n        <input\n          type=\"text\"\n          placeholder=\"Nhập từ khóa để làm thơ\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={handleKeyDown}\n          disabled={loading}\n        />\n        <button onClick={handleSend} disabled={loading || !input.trim()} aria-label=\"Gửi\">\n          <svg viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M2.94 2.94a1.5 1.5 0 0 1 1.6-.33l12.5 5.06c1.2.49 1.2 2.15 0 2.64l-12.5 5.06a1.5 1.5 0 0 1-2.04-1.7l1.13-5.06a.5.5 0 0 1 0-.24L.9 4.64A1.5 1.5 0 0 1 2.94 2.94zm1.13 1.13a.5.5 0 0 0-.67.57l1.13 5.06a1.5 1.5 0 0 1 0 .24l-1.13 5.06a.5.5 0 0 0 .67.57l12.5-5.06a.5.5 0 0 0 0-.94l-12.5-5.06z\"/></svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBox; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}